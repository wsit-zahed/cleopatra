Cleopatra Modules to be created

IN PROGRESS
---------------------------------------
You cannot call a module NoModuleAssociated as PackageManager uses that to store packages in cleovars that were installed
from cli not module


All

A new concept
One composerised, we can keep client installs lightweight by building cleo from dependencies in the autopilot.
step one, logging, then get the dependencies for that
next, packagemanager, etc, then dependencies.
Then, once that is one, we actually run the autopilot.
Is this any good, is it any quicker since composer is slow, is it more secure, by not including modules which you
don't need but could be abused.

DONE
SSH Private key encryption thing
----------------------------------
Any box requiring this should have an environment variable or file
Encrypter like templater
ssh-keygen DONE
ssh-encrypt (encrypt/decrypt a private key) 75% DONE
(save decrypted private key somewhere) DECRYPT WILL DO THIS GIVEN A TARGET

VERSIONING
Versioning works for modules, but not for packages installed from modules, different code
Should be able to specify what version of packages are required
The version_compare function, already available in PHP will make this easy
The only important ones are either software version should
a) be exact
b) be greater than

Modules Ensuring Versions
------------------------------------

WAIT - Behat - Behat - The PHP BDD Testing Suite
WAIT - Firewall - Add, Remove or Modify Firewalls
WAIT - GitBucket - Git Bucket - The Git SCM Management Web Application
WAIT - IntelliJ - IntelliJ - A great IDE from JetBrains
WAIT - Jenkins - Jenkins - The Java Build Server
WAIT - LigHTTPDServer - LigHTTPD Server - Install or remove the LigHTTPD Server
WAIT - NagiosServer - Nagios Server - Install or remove the Nagios Server
WAIT - NginxServer - Nginx Server - Install or remove the Nginx Server
WAIT - PHPUnit - PHP Unit - The PHP Implementation of the XUnit Unit Testing standard
WAIT - PostgresServer - Postgres Server - The Postgres RDBMS Server
WAIT - RubyBDD - Ruby BDD Suite - Install Common Gems for Cucumber, Calabash, Capybara and Saucelabs
WAIT - RubySystem - Ruby RVM System wide - The Ruby version manager system wide version

DONE - ApacheServer - Apache Server - Install or remove the Apache Server
DONE - Cleopatra - Cleopatra - Upgrade or Re-install Cleopatra - PHPGITAPP GET TAG
DONE - Dapperstrano - Dapperstrano - The PHP Automated Website Deployment tool - PHPGITAPP GET TAG
DONE - Firefox - Firefox - Install or remove Firefox
DONE - Java - Java JDK 1.7
DONE - JRush - JRush - The Joomla command line utility from Golden Contact - PHPGITAPP GET TAG
DONE - MysqlServer - Mysql Server - The Mysql RDBMS Server
DONE - NodeJS - Node JS - The Server Side Javascript Engine
DONE - Parallax - Parallax - The parallel execution tool from Golden Contact - PHPGITAPP GET TAG
DONE - Phlagrant - Phlagrant - The Virtual Machine management solution for PHP - PHPGITAPP GET TAG
DONE - Python - Python - The programming language
DONE - Testingkamen - Testingkamen - Upgrade or Re-install Testingkamen PHP - PHPGITAPP GET TAG
WAIT - SeleniumServer - The Selenium Web Browser controlling server
DONE - SVN - SVN - The Source Control Manager

******************************



Boxify Almost complete - Works smoothly on DigitalOcean, but there is a Problem. The SSH keys dont work,
even when adding them manually via the digital ocean interface, cant login
so, use Environmrntconfig with --keep-current-environemnts and --no-manual-servers to create an empty env.
Then use boxify, and we can Invoke cli --env-name straight after .
BOX-MANAGER-SUPERCLASS
BoxManager like packagemanager. This is barely started. write down a list of what this and scaler module needs.
VERY IMPORTANT! Work out the interface for environment/box clouding, and smooth scaling. AWS and digital ocean
minimum. 50% DONE


contact sebastien bergmann and everzet to ask for their views on testing the app. Get a test framework plan at least.

ALMOST DONE
Just remove all references to autopilot. also remove method calls from install, baselinuxapp, basephpapp, all methods accepting
autopilot or using autopilot parameters. make sure that everything that was covered by a runautopilot is now covered by a
control action combo


Composerise core. As part of this, you can install a custom et of modules, including say cleo amd dapper in one.
update dapper, parallax and tkmn to this core.

do videos
do docs

we're ready

MVP ABOVE HERE

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Kind Of Important - will be luvvly
-----------------------------------

Module Handler. Get new Modules, Delete Modules, Disable, Enable

A file caching system for pharoah

All Models of a particular Model group should have an interface

We should have some kind of waiter module for the build process and autopilots, so
I change my jenkins-server autopilot, during the build this is noticed, and an invoke script,
tied to the autopilot (use a naming convention by default/guess maybe?)

Configurers
-------------------
depend on templating module DONE
PHPConf - have a template file of the .ini, and an array with the php.ini defaults. Allow params to be overridden
    Send the template file, target location
    50% DONE, other template vars
ApacheConf - have a template file of the .conf, and an array with the apache defaults. Allow params to be overridden
    50% DONE, other template vars

Remove the swapPlaceholders when possible. currently its used because the value is not set in the constructor before its
used. Go through all modules updating bash lines (even in arrays) for code dependencies

Update base app to only create executors when the programExecutorTargetPath is set

PHP Module to install multiple PHP versions, or change the installed version of PHP.
Also, how does that work when executing an upgrade on PHP through a PHP script? crashy crashy?


NEARLY MVP ABOVE HERE

Modules correctly reporting status
----------------------
WAIT - SshHarden - Apply security functions to the SSH accounts/setup of the machine
WAIT - Gem - Ruby Gems Package Manager
WAIT - GitBucket - Git Bucket - The Git SCM Management Web Application
WAIT - GitLab - Git Lab - The Git SCM Management Web Application
WAIT - Jenkins - Jenkins - The Java Build Server ITS A JAVA PROGRAM NOT SURE HOW TO DO INST CHECK YET
WAIT - NodeJS - Node JS - The Server Side Javascript Engine  (looks like it should work but node not installed to check)
WAIT - Pear - Pear Package Manager
WAIT - RubyRVM - Ruby RVM - The Ruby version manager


Autopilot Definer
---------------
Do we need this anymore
Set this in the Parent constructor of Models. This removes a line from all default models constructors. it should
always be the module name for a default model. This also removes confusion for a non default model it should be
Module::ModelGroup.
NO - Just replace the whole autopilot thang with setting parameters on a model (Including the Action, so there is no
need for a runAutoPilot method) before executing it. Need to make sure we


Git Servers-
----------------
GitLab (Started, but to be completed)






NOT STARTED
----------------


Web Servers
----------------
Zend Server  - HAVE APPROACHED ZEND TO DO THIS
PHP VM  - GET FACEBOOK TO DO THIS
Zephir



Git Servers-
----------------
Gitbucket



Databases-
----------------
Oracle - Install and Configure Oracle RDBMS Server
Mongo - Install and Configure Mongo Nosql Server
Hadoop - Install and Configure Hadoop Server
Cassandra - Install and Configure Cassandra NOSQL Server



DataStores
----------------
Memcache
Memcached
Redis



HTTP Caches
----------------
Varnish



OP Code Caches
----------------
XCache



Server Monitoring-
----------------
Nagios - Install and Configure Nagios
Zenoss - Install and Configure Zenoss
NewRelic - Install and Configure NewRelic
TraceAlytics - Install and Configure TraceAlytics



Testing tools
----------------
PHPSpec
Storyplayer
Hardy CSS Regression
Webpagetest
Skipfish
Loadrunner
Jmeter




FTP Servers
-------------------
vsftpd




Terminator Module
-------------------
http://software.jessies.org/downloads/mac/terminator.zip
http://software.jessies.org/downloads/debian/org.jessies.terminator.i386.deb
http://software.jessies.org/downloads/debian/org.jessies.terminator.x86_64.deb
http://software.jessies.org/downloads/debian/org.jessies.terminator.i386.rpm
http://software.jessies.org/downloads/debian/org.jessies.terminator.x86_64.rpm
http://software.jessies.org/downloads/windows/terminator.msi


phpDocumentor
phpDocumentor (also known as phpdoc and phpdocu) is a documentation tool for your PHP source code. It has an innumerable
amount of features, including the ability to output in HTML, PDF, CHM and XML DocBook formats, and has both a Web-based
and command-line interface as well as source-code highlighting. To learn more about phpDocumentor, check out the
online manual.
- pear channel-discover pear.phpdoc.org
- pear install phpdoc/phpDocumentor
10 Minutes

PHP Code Beautifier
PHP_Beautifier
PHP Beautifier is a PEAR package for automatically formatting and “beautifying” PHP 4 and PHP 5 source code.
pear install PHP_Beautifier
10 Minutes

Phing
Phing is a popular project version-control system for PHP. It is a useful tool for organizing and maintaining different
builds of your project.
Windows and Linux, 2 hours

phpMyAdmin
If you’re working with PHP, there’s a big chance you’re set up in a LAMP configuration. phpMyAdmin is Web-based tool for
managing, building, importing, exporting and exploring MySQL databases.
ensure mysql
inst mysql admins
dapper phpmyadmin
Windows and Linux, 6 hours

PECL
PECL is a directory of all known PHP extensions and a hosting facility for downloading and developing PHP extensions.
As a Package Manager
2 hours

PHP-GTK
PHP-GTK is a PHP extension for the GTK+ toolkit (a robust toolkit for developing GUIs). It is a suite of useful OOP
functions and classes to help you rapidly build cross-platform, client-side GUI’s for your application.
1 Hour if PECL or PEAR

PHPSpec
PHPSpec is a simple and intuitive PHP framework. It follows the Behavior-Driven Development principle and therefore
allows you to write behavior-oriented code, oftentimes in plain English.



IDE's
--------

NetBeans
A dedicated PHP coding environment and complete integration with web standards. The NetBeans PHP editor is dynamically
integrated with NetBeans HTML, JavaScript and CSS editing features such as syntax highlighting and the JavaScript
debugger. NetBeans IDE 6.5 fully supports iterative development, so testing PHP projects follows the classic patterns
familiar to web developers.
Similar to intellij, 6 hours






WAIT UNTIL LATER
-----------------------


C Compiler
---------------
UbuntuCompiler - HALF DONE
This should also be just "compiler" by the way. it would be great to compile multiple os'es the same way but i don't
think i know that one well enough to do it.


Git Servers-
----------------
Gitbucket


OpenOffice
-------------------
mac
http://downloads.sourceforge.net/project/openofficeorg.mirror/4.0.1/binaries/en-US/Apache_OpenOffice_4.0.1_MacOS_x86_install_en-US.dmg?r=http%3A%2F%2Fwww.openoffice.org%2Fdownload%2F&ts=1383924817&use_mirror=freefr


Servlet Containers
-------------------
Tomcat Install
Tomcat Configure
Jetty Install
Jetty Configure

PHP APPS
--------
PHP DOX
An AJAX-powered PHP documentation search engine that enables you to search titles from all PHP documentation pages.

PHPCodeBeautifier
PHPCodeBeautifier is a tool that saves you from hours of reformatting code to suit your own way of presenting it. A GUI
version allows you to process files visually; a command-line version can be batched or integrated with other tools
(like CVS, SubVersion, IDE, etc.); and there is also an integrated tool of PHPEdit.
http://www.waterproof.fr/download/phpCodeBeautifier/phpCB-1.0.1-linux.tgz
Windows and Linux, 2 hours

Minify!
Minify is a PHP 5 app that can combine multiple CSS or JavaScript files, compress their content (i.e. remove unnecessary
 white space and comments) and serve the results with HTTP encoding (via Gzip/deflate) and headers that allow optimal
 client-side caching. This will help you follow several of Yahoo!’s Rules for High Performance Websites.


IDE's
--------
PHPEclipse
PHPEclipse is a popular PHP source-code editor that is open source and runs on all the major operating systems, such as
Windows, Linux and Mac OS. It has all the features you’d expect from a PHP source-code editor, such as code-folding,
syntax highlighting, hover-over tool tips and support for XDebug and DBG.

PhpED
PhpED is an excellent IDE for Windows users. It is one of the most robust and feature-packed IDEs currently out on the
market and has useful features such as a built-in source-code profiler to find bottlenecks in your PHP source code and
excellent integration with third-party apps and services just as front-end code validation.

phpDesigner
phpDesigner is a lightweight PHP editor/IDE that also handles front-end code and markup remarkably well. Check out the
phpDesigner online tutorials, as well as screencasts on phpDesigner to help you learn more about the IDE.

Zend Studio
Zend Studio is an excellent PHP IDE for Eclipse. It’ll help you develop, deploy and manage Rich Internet Applications
(RIAs) in an intuitive interface.

Aptana PHP
Aptana PHP is an open-source IDE extension/plug-in to be used in conjunction with Aptana Studio. To learn more, be sure
to check out the online documentation about Aptana PHP.

PHPEdit
PHPEdit is an excellent PHP editor/IDE with a ton of useful features and a very intuitive user interface. To learn more
about why PHPEdit is a good IDE, read the 10 reasons to use PHPEdit and view the introductory screencast about PHPEdit.






DONE
-----------
Postgres - Install and Configure PostgresSQL Server DONE

Security
----------------
Firewall Software DONE

Security
----------------
Suhosin - PECL INSTALL/REMOVE SUHOSIN


State Detection - Allow the pyramid application to detect information regarding software and configuration install
current state
- Its already providing a default status for anything that was installed via cleo DONE
- Need the apt module, then the apt module can save both calling module and apt-program, so don't uninstall both
- all modules when installing if they are a dependency, should also save themselves as such DONE
- this way a dependency will probably be an apt or a module DONE
- DONE - all models have a default askStatus method. linux apps extend to execute an FS command. you can provide
  the statusCommand parameter to check with a command you provide for a 0 or non 0 exit code. you can also provide
  statusCommandExpects otherwise it will try to run the "command programNameMachine" to

System Detection - Allow the pyramid application to detect OS, OS Version and Hardware information. Have a Factory Class
in Core which detects the running OS and looks in the module for a model which Reports itself as matching The
combination (ie "Ubuntu", "12.04"/"+ 11.10"), falling back to "any" instead of version if there's an "any" model. - DONE FULY
- Add other data like hostname, ip addresses to this


OP Code Caches
----------------
APC - done
-------------------------------------------------------------------------------
To add to MediaTools
https://help.ubuntu.com/community/RestrictedFormats/PlayingDVDs
sudo apt-get install libdvdread4
sudo /usr/share/doc/libdvdread4/install-css.sh

DONE
-------------------------------------------------------------------------------

Templating Module
-------------------
    Should accept
    - A template file location to read
    - An array, object or key/value file of replacements
    - a target path/name for file
    - a owner for target file (optional)
    - a group for target file (optional)
    - a permission for target file (optional)

    DONE


Web Servers
----------------
Nginx Install - done
Nginx Service Control - DONE DAPPERSTRANO
LightHttpd Install  - done
LightHttpd Service Control - DONE DAPPERSTRANO


DONE
-----------------
Inter module Compatibility- one model/module should be able to call another without using a line of bash with parameter
- actually is there any benefit to this? are we looking for an exit code? If we want information returned that's more
  than an exit code we'll need to stop spawning
- If the above are working, is there any benefit to not spawning?
THIS IS DONE BY USING THE FACTORY TO GET MODELS/MODEL GROUPS FROM MODULES

To do this, create a protected (maybe static as its called from another module) method in the autopilot, use
system-detection-factory to return a compatible model, Then add a step to the AutopilotMethod Module with your
method name, and the method/class should be able to set its own parameters with a private property or something
-----------------

Testing tools
----------------
Mink/Behat  - done
Ruby BDD Suite
- Cucumber Gem
- Capybara Gem
- Calabash Gem


Update InstallCommands to accept functions as well as string commands - DONE
you can pass an array of instantiated object, methodname and parameters, or an array with a single bash string as its
value, or an array with an array, of bash strings as its value. An array of bash strings will be executed as seperate
lines in a single bash script.
    "a command string",
    array("command"=> "a command string" ),
    array("method"=> array("object" => $this, "method" => "setDefaultReplacements", "params" => array()) ),
You canNOT now pass a string as before which will always be run as bash (to allow modules that haven't been updated
yet to work) all modules are updated

Update all modules to execute their steps using command or method arrays. DONE
Deprecate bash strings DONE
Remove registered pre/post install functions, replace with function steps in installCommands DONE
Remove extraCommands from all DONE



Package Managers
----------------
Pear DONE
apt-get install DONE
apt-get update DONE
Gem (RubyGems), extend a PackageManager module that apt-get and yum can also use to store dependencies DONE




Cleopatra
----------------
Cleofy should be Updated to use the Templating module  DONE



Modules correctly using command/method calls instead of bash string
----------------------
DONE - AWSCloudFormation - The AWS CloudFormation CLI Tools
DONE - AWSCloudWatch - The AWS CloudWatch CLI Tools
DONE - ApacheConf - Apache Conf - Install a Apache Configuration
DONE - ApacheModules - Apache Modules - Commonly used modules for Apache
DONE - ApacheServer - Apache Server - Install or remove the Apache Server
DONE - Apt - Add, Remove or Modify Apts
DONE - Autopilot - Cleopatra Autopilot - User Defined Installations
DONE - Behat - Behat - The PHP BDD Testing Suite
DONE - Cleofy - Cleopatra Cleofyer - Creates default autopilots for your project
DONE - Cleopatra - Cleopatra - Upgrade or Re-install Cleopatra
DONE - Console
DONE - Dapperstrano - Dapperstrano - The PHP Automated Website Deployment tool
DONE - DeveloperTools - Developer Tools - IDE's and other tools for Developers
DONE - EnvironmentConfig - Environment Configuration - Configure Environments for a project
DONE - File - Add, Remove or Modify Files
DONE - Firefox14 - Firefox 14 - A version of Firefox highly tested with Selenium Server
DONE - Firefox17 - Firefox 17 - A version of Firefox highly tested with Selenium Server
DONE - Firewall - Add, Remove or Modify Firewalls
DONE - Gem - Ruby Gems Package Manager
DONE - Generator - Dapperstrano Autopilot Generator - Generate Autopilot files interactively
DONE - GitBucket - Git Bucket - The Git SCM Management Web Application
DONE - GitLab - Git Lab - The Git SCM Management Web Application
DONE - GitTools - Git Tools - Tools for working with Git SCM
DONE - Hostname - View or Modify Hostname
DONE - InstallPackage - Cleopatra Predefined Installers
DONE - IntelliJ - IntelliJ - A great IDE from JetBrains
DONE - Invoke - SSH Invocation Functions
DONE - JRush - JRush - The Joomla command line utility from Golden Contact
DONE - Java - Java JDK 1.7
DONE - Jenkins - Jenkins - The Java Build Server
DONE - JenkinsPlugins - Jenkins PHP Plugins - Common Plugins for Jenkins PHP Builds
DONE - JenkinsSudoNoPass - Configure Passwordless Sudo for your Jenkins user
DONE - LigHTTPDServer - LigHTTPD Server - Install or remove the LigHTTPD Server
DONE - MediaTools - Media Tools - Tools to help view and manage Media files
DONE - MysqlAdmins - Mysql Admins - Install administrative users for Mysql
DONE - MysqlServer - Mysql Server - The Mysql RDBMS Server
DONE - MysqlTools - Mysql Tools - For administering and developing with Mysql
DONE - NagiosServer - Nagios Server - Install or remove the Nagios Server
DONE - NginxServer - Nginx Server - Install or remove the Nginx Server
DONE - NodeJS - Node JS - The Server Side Javascript Engine
DONE - PHPAPC - PHP APC - Commonly used PHP APC
DONE - PHPCS - PHP Code Sniffer - The static code analysis tool
DONE - PHPConf - PHP Conf - Install a PHP Configuration
DONE - PHPMD - PHP Mess Detector - The static analysis tool
DONE - PHPModules - PHP Modules - Commonly used PHP Modules
DONE - PHPUnit - PHP Unit - The PHP Implementation of the XUnit Unit Testing standard
DONE - PackageManager - Native Package Manager Wrapper - Install OS neutral packages
DONE - PapyrusEditor - Papyrus Editor Web Interface
DONE - Parallax - Parallax - The parallel execution tool from Golden Contact
DONE - Pear - Pear Package Manager
DONE - Phlagrant - Phlagrant - The Virtual Machine management solution for PHP
DONE - Port - Test a Port to see if its responding
DONE - PostInput - HTTP Post/Get Input Interface
DONE - Python - Python - The programming language
DONE - RubyBDD - Ruby BDD Suite - Install Common Gems for Cucumber, Calabash, Capybara and Saucelabs
DONE - RubyRVM - Ruby RVM - The Ruby version manager
DONE - RubySystem - Ruby RVM System wide - The Ruby version manager system wide version
DONE - SVN - SVN - The Source Control Manager
DONE - SeleniumServer - The Selenium Web Browser controlling server
DONE - Service - View or Modify Service
DONE - SshHarden - Apply security functions to the SSH accounts/setup of the machine
DONE - StandardTools - Standard Tools for any Installation
DONE - SudoNoPass - Configure Passwordless Sudo for any User
DONE - SystemDetection - System Detection - Detect the Running Operating System
DONE - Templating - Templating
DONE - Testingkamen - Testingkamen - Upgrade or Re-install Testingkamen
DONE - UbuntuCompiler - Ubuntu Compiler - For Compiling Linux Programs
DONE - User - Add, Remove or Modify Users




Modules where runautopilot code changed for params
OK - AWSCloudFormation - The AWS CloudFormation CLI Tools
OK - AWSCloudWatch - The AWS CloudWatch CLI Tools
OK - AWSEC2 - AWS EC2 Server Management Functions
OK - ApacheConf - Apache Conf - Install a Apache Configuration
OK - ApacheModules - Apache Modules - Commonly used modules for Apache
OK - ApacheServer - Apache Server - Install or remove the Apache Server
OK - Apt - Add, Remove or Modify Apts
OK - Autopilot - Cleopatra Autopilot - User Defined Installations
OK - Behat - Behat - The PHP BDD Testing Suite
OK - BoxManager - Native Box Manager Wrapper - Install OS neutral environments
OK - Cleofy - Cleopatra Cleofyer - Creates default autopilots for your project
OK - Cleopatra - Cleopatra - Upgrade or Re-install Cleopatra
OK - Console - Console - Output errors to the console
OK - Dapperstrano - Dapperstrano - The PHP Automated Website Deployment tool
OK - DeveloperTools - Developer Tools - IDE's and other tools for Developers
OK - DigitalOcean - Digital Ocean Server Management Functions
OK - Encryption - Encryption or Decryption of files
OK - EnvironmentConfig - Environment Configuration - Configure Environments for a project
OK - File - Add, Remove or Modify Files
OK - Firefox14 - Firefox 14 - A version of Firefox highly tested with Selenium Server
OK - Firefox17 - Firefox 17 - A version of Firefox highly tested with Selenium Server
OK - Firewall - Add, Remove or Modify Firewalls
OK - Gem - Ruby Gems Package Manager
OK - Generator - Dapperstrano Autopilot Generator - Generate Autopilot files interactively
OK - GitBucket - Git Bucket - The Git SCM Management Web Application
OK - GitLab - Git Lab - The Git SCM Management Web Application
OK - GitTools - Git Tools - Tools for working with Git SCM
OK - Hostname - View or Modify Hostname
OK - InstallPackage - Cleopatra Predefined Installers
OK - IntelliJ - IntelliJ - A great IDE from JetBrains
OK - Invoke - SSH Invocation Functions
OK - JRush - JRush - The Joomla command line utility from Golden Contact
OK - Java - Java JDK 1.7
OK - Jenkins - Jenkins - The Java Build Server
OK - JenkinsPlugins - Jenkins PHP Plugins - Common Plugins for Jenkins PHP Builds
OK - JenkinsSudoNoPass - Configure Passwordless Sudo for your Jenkins user
OK - LigHTTPDServer - LigHTTPD Server - Install or remove the LigHTTPD Server
OK - MediaTools - Media Tools - Tools to help view and manage Media files
OK - MysqlAdmins - Mysql Admins - Install administrative users for Mysql
OK - MysqlServer - Mysql Server - The Mysql RDBMS Server
OK - MysqlTools - Mysql Tools - For administering and developing with Mysql
OK - NagiosServer - Nagios Server - Install or remove the Nagios Server
OK - NginxServer - Nginx Server - Install or remove the Nginx Server
OK - NodeJS - Node JS - The Server Side Javascript Engine
OK - PHPAPC - PHP APC - Commonly used PHP APC
OK - PHPCS - PHP Code Sniffer - The static code analysis tool
OK - PHPConf - PHP Conf - Install a PHP Configuration
OK - PHPMD - PHP Mess Detector - The static analysis tool
OK - PHPModules - PHP Modules - Commonly used PHP Modules
OK - PHPUnit - PHP Unit - The PHP Implementation of the XUnit Unit Testing standard
OK - PackageManager - Native Package Manager Wrapper - Install OS neutral packages
OK - PapyrusEditor - Papyrus Editor Web Interface
OK - Parallax - Parallax - The parallel execution tool from Golden Contact
OK - Pear - Pear Package Manager
OK - Phlagrant - Phlagrant - The Virtual Machine management solution for PHP
OK - Port - Test a Port to see if its responding
OK - PostInput - HTTP Post/Get Input Interface
OK - PostgresServer - Postgres Server - The Postgres RDBMS Server
OK - Python - Python - The programming language
OK - RubyBDD - Ruby BDD Suite - Install Common Gems for Cucumber, Calabash, Capybara and Saucelabs
OK - RubyRVM - Ruby RVM - The Ruby version manager
OK - RubySystem - Ruby RVM System wide - The Ruby version manager system wide version
OK - SVN - SVN - The Source Control Manager
OK - SeleniumServer - The Selenium Web Browser controlling server
OK - Service - View or Modify Service
OK - SshEncrypt - Mysql Admins - Install administrative users for Mysql
OK - SshHarden - Apply security functions to the SSH accounts/setup of the machine
OK - SshKeygen - SSH Keygen - Generate SSH Kay Pairs
OK - StandardTools - Standard Tools for any Installation
OK - SudoNoPass - Configure Passwordless Sudo for any User
OK - SystemDetection - System Detection - Detect the Running Operating System
OK - Templating - Templating
OK - Testingkamen - Testingkamen - Upgrade or Re-install Testingkamen
OK - UbuntuCompiler - Ubuntu Compiler - For Compiling Linux Programs
OK - User - Add, Remove or Modify Users
OK - Yum - Add, Remove or Modify Yum Packages



VERY IMPORTANT!!!
MysqlAdmins and RunCommand both require a new way to call
FIXED, If a command requires propertiers of an object, put it in a method and use executeAsShell

There are lots of runAutopilot methods missing. Is there a cleaner way to do this by just having autopilot variables
assigned to parameters at the beginning. So, then you provide Module(Controller), Action, available Parameters as each
step. This means that all runAutoPilot methods can be removed. each of the info files has an autoPilotVariables() method.
They can now all be removed, replaced with "exposedParams" or something. This way, each action can be listed with the
parameters it accepts. It also means that the generator will be much easier to work, with some js and httpPostInput,
the generator can look great.

Pharoah exit codes are working.  set from anywhere with \Bootstrap\setExitCode($int)